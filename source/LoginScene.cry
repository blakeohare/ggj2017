class LoginScene : AbstractScene {
	
	field counter = 0;
	field subCounter = 0;
	field nameLabel = null;
	field currentName = '';
	
	field buttons = [
	"A B C D E F G H I J K L M",
	"N O P Q R S T U V W X Y Z",
	"a b c d e f g h i j k l m",
	"n o p q r s t u v w x y z",
	"0 1 2 3 4 5 6 7 8 9 Done <",
	];
	
	constructor(errorMessage = '') : base() {
		
		this.addElement(new UIRectangle(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT, 255, 255, 255, 255));
		
		this.addElement(UIText.create(10, 10, "Choose A Name", 'black', FontSize.M));
		this.addElement(UIText.create(10, 50, errorMessage, 'red', FontSize.M));
		
		xWidth = 45;
		xMargin = 15;
		xSpacing = xWidth + xMargin;
		y = 100;
		for (row = 0; row < this.buttons.length; ++row) {
			labels = this.buttons[row].split(' ');
			x = 10;
			for (label : labels) {
				width = xWidth;
				if (label == "Done") {
					width = xWidth * 2 + xMargin;
				}
				button = new UIButton(x, y, width, 36, label, 'white', FontSize.S)
					.setOpacity(190)
					.setId(label)
					.setHandler(this.clickButton);
					
				this.addElement(button);
				x += width + xMargin;
			}
			y += 50;
		}
		
		y += 50;
		x = 10;
		this.nameLabel = UIText.create(x, y, "", 'blue', FontSize.L);
		this.addElement(this.nameLabel);
		
	}
	
	function update(input) {
		this.counter++;
		if (this.counter % FPS < FPS / 2) {
			this.nameLabel.text = this.currentName;
		} else {
			this.nameLabel.text = this.currentName + '_';
		}
	}
	
	function clickButton(id) {
		switch (id) {
			case 'Done':
				this.register();
				break;
				
			case '<':
				this.currentName = this.currentName[:-1];
				break;
				
			default:
				if (id.length == 1) {
					this.currentName += id;
				}
				break;
		}
	}
	
	function register() {
		this.switchScene(new JoiningScene(this.currentName));
	}
	
	
}